name: Terraform VPC Deployment

on:
  push:
    branches:
      - main
    paths:
      - "modules/vpc/**"
      - "environments/dev/main.tf"

  workflow_dispatch:  # ✅ Allows manual triggering

jobs:
  terraform-vpc:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install or Update AWS CLI  # ✅ Fix for AWS CLI installation issue
        run: |
          if ! command -v aws &> /dev/null; then
            echo "AWS CLI not found, installing..."
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install
          else
            echo "AWS CLI is already installed, updating..."
            sudo aws --update
          fi
          aws --version

      - name: Verify AWS Authentication  # ✅ Ensure AWS credentials are valid
        run: aws sts get-caller-identity

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Terraform Init
        run: terraform init
        working-directory: environments/dev

      - name: Terraform Apply VPC  # ✅ Applies only the VPC module first
        run: terraform apply -target=module.vpc -auto-approve
        working-directory: environments/dev

      - name: Store VPC ID in GitHub Environment  # ✅ Saves VPC ID for later use
        run: echo "VPC_ID=$(terraform output -raw vpc_id)" >> $GITHUB_ENV
        working-directory: environments/dev

      #- name: Terraform Output Check  # ✅ Debugging step to verify stored VPC ID
       # run: echo "VPC ID: $VPC_ID"
